import * as lean from './hacky-lean-runtime.js';

export const instructions = (bv_0) => (((bv_1) => (((bv_2) => (((bv_3) => ((lean.Splat_stack)(((lean.List_toArray)(lean.Splat))((((lean.List_cons)(lean.Splat))(((lean.Splat_line)(((((lean.Prod_mk)(lean.Float))(lean.Float))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n))))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n)))))(((((lean.Prod_mk)(lean.Float))(lean.Float))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n))))((((lean.OfNat_ofNat)(lean.Float))(100n))((lean.instOfNatFloat)(100n))))))((((lean.List_cons)(lean.Splat))(((lean.Splat_line)(((((lean.Prod_mk)(lean.Float))(lean.Float))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n))))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n)))))(((((lean.Prod_mk)(lean.Float))(lean.Float))((((lean.OfNat_ofNat)(lean.Float))(100n))((lean.instOfNatFloat)(100n))))((((lean.OfNat_ofNat)(lean.Float))(0n))((lean.instOfNatFloat)(0n))))))((((lean.List_cons)(lean.Splat))((lean.Splat_func)((bv_4) => (((((((lean.HAdd_hAdd)(lean.Float))(lean.Float))(lean.Float))(((lean.instHAdd)(lean.Float))(lean.instAddFloat)))(bv_3))(((((((lean.HMul_hMul)(lean.Float))(lean.Float))(lean.Float))(((lean.instHMul)(lean.Float))(lean.instMulFloat)))(bv_2))(bv_4))))))((((lean.List_cons)(lean.Splat))(((lean.Splat_circle)(((((lean.Prod_mk)(lean.Float))(lean.Float))(bv_0))((bv_1)(bv_0))))((((lean.OfNat_ofNat)(lean.Float))(20n))((lean.instOfNatFloat)(20n)))))((((lean.List_cons)(lean.Splat))((lean.Splat_func)(bv_1)))((lean.List_nil)(lean.Splat))))))))))(((((((lean.HSub_hSub)(lean.Float))(lean.Float))(lean.Float))(((lean.instHSub)(lean.Float))(lean.instSubFloat)))((bv_1)(bv_0)))(((((((lean.HMul_hMul)(lean.Float))(lean.Float))(lean.Float))(((lean.instHMul)(lean.Float))(lean.instMulFloat)))(bv_0))(bv_2)))))(((((((lean.HDiv_hDiv)(lean.Float))(lean.Float))(lean.Float))(((lean.instHDiv)(lean.Float))(lean.instDivFloat)))(((((((lean.HSub_hSub)(lean.Float))(lean.Float))(lean.Float))(((lean.instHSub)(lean.Float))(lean.instSubFloat)))((bv_1)(((((((lean.HAdd_hAdd)(lean.Float))(lean.Float))(lean.Float))(((lean.instHAdd)(lean.Float))(lean.instAddFloat)))(bv_0))((((((lean.OfScientific_ofScientific)(lean.Float))(lean.instOfScientificFloat))(1n))(lean.Bool_true))(3n)))))((bv_1)(((((((lean.HSub_hSub)(lean.Float))(lean.Float))(lean.Float))(((lean.instHSub)(lean.Float))(lean.instSubFloat)))(bv_0))((((((lean.OfScientific_ofScientific)(lean.Float))(lean.instOfScientificFloat))(1n))(lean.Bool_true))(3n))))))((((((lean.OfScientific_ofScientific)(lean.Float))(lean.instOfScientificFloat))(2n))(lean.Bool_true))(3n)))))((bv_1) => (((((((lean.HAdd_hAdd)(lean.Float))(lean.Float))(lean.Float))(((lean.instHAdd)(lean.Float))(lean.instAddFloat)))(((((((lean.HAdd_hAdd)(lean.Float))(lean.Float))(lean.Float))(((lean.instHAdd)(lean.Float))(lean.instAddFloat)))(((((((lean.HMul_hMul)(lean.Float))(lean.Float))(lean.Float))(((lean.instHMul)(lean.Float))(lean.instMulFloat)))(((((((lean.HMul_hMul)(lean.Float))(lean.Float))(lean.Float))(((lean.instHMul)(lean.Float))(lean.instMulFloat)))((((lean.Neg_neg)(lean.Float))(lean.instNegFloat))((((((lean.OfScientific_ofScientific)(lean.Float))(lean.instOfScientificFloat))(3n))(lean.Bool_true))(2n))))(bv_1)))(bv_1)))(((((((lean.HMul_hMul)(lean.Float))(lean.Float))(lean.Float))(((lean.instHMul)(lean.Float))(lean.instMulFloat)))((((((lean.OfScientific_ofScientific)(lean.Float))(lean.instOfScientificFloat))(27n))(lean.Bool_true))(1n)))(bv_1))))((((lean.OfNat_ofNat)(lean.Float))(10n))((lean.instOfNatFloat)(10n))))))